<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="PictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        R0lGODlhyADIAPcAAP//AN3d3f8AANnBC+ivgv///wphsgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        ACH/C05FVFNDQVBFMi4wAwEAAAAh+QQJIQAAACwAAAAAyADIAAAI/gABCBxIsKDBgwgTKlzIsKHDhxAj
        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
        FbNYwS5+sYFjLGMHi6bGMD4JjnMskYAAACH5BAkhAAAALAAAAADIAMgAh///AN3d3f8AANnBC+ivgv//
        /wphsgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAj+AAEIHEiwoMGDCBMqXMiwocOHECNKnEixosWL
        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
        gWMsYweLpsYwPgmOcyyRgAAAIfkECSEAAAAsAAAAAMgAyACH//8A3d3d/wAA2cEL6K+Cp3JIAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACP4AAQgcSLCgwYMIEypcyLChw4cQI0qcSLGixYsYM2rcyLGj
        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
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAj+AAEIHEiwoMGDCBMqXMiw
        ocOHECNKnEixosWLGDNq3Mixo8ePIEOKHEmypMmTKFOqXMmypcuXMGPKnEmzps2bOHPq3Mmzp8+fQIMK
        HUq0qNGjSJMqXcq0qdOnUKNKnUq1qtWrWLMuDcC1q9evYMOK9arV6NizaM+WLZq2rdsAa4m+nTs27lC6
        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
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
</value>
  </data>
</root>